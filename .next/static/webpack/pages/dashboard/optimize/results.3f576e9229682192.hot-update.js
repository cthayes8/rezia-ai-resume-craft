"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard/optimize/results",{

/***/ "(pages-dir-browser)/./src/lib/resumeSerializer.ts":
/*!*************************************!*\
  !*** ./src/lib/resumeSerializer.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resumeDataToHTML: () => (/* binding */ resumeDataToHTML)\n/* harmony export */ });\n/**\n * Serialize a ResumeData object into semantic HTML for WYSIWYG editing.\n * Renders headings, paragraphs, lists, and links to mirror the final resume layout.\n */ function resumeDataToHTML(resume) {\n    var _resume_work, _resume_education, _resume_skills, _resume_certifications, _resume_awards, _resume_projects, _resume_languages;\n    // Escape HTML special characters; safe for undefined or empty strings\n    const escapeHTML = (str)=>{\n        if (!str) return '';\n        return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n    };\n    let html = '';\n    // Name and contact\n    html += \"<h1>\".concat(escapeHTML(resume.name), \"</h1>\");\n    const contacts = [];\n    if (resume.contact.email) contacts.push(escapeHTML(resume.contact.email));\n    if (resume.contact.link) contacts.push('<a href=\"'.concat(escapeHTML(resume.contact.link), '\" target=\"_blank\">').concat(escapeHTML(resume.contact.link), \"</a>\"));\n    if (resume.contact.phone) contacts.push(escapeHTML(resume.contact.phone));\n    if (contacts.length) html += \"<p>\".concat(contacts.join(' | '), \"</p>\");\n    // Summary\n    html += \"<h2>Professional Summary</h2><p>\".concat(escapeHTML(resume.summary), \"</p>\");\n    // Work Experience\n    if ((_resume_work = resume.work) === null || _resume_work === void 0 ? void 0 : _resume_work.length) {\n        html += '<h2>Work Experience</h2>';\n        resume.work.forEach((job)=>{\n            const dates = [\n                job.from,\n                job.to\n            ].filter(Boolean).map(escapeHTML).join(' – ');\n            html += \"<h3>\".concat(escapeHTML(job.title), \" | \").concat(escapeHTML(job.company)).concat(dates ? ' | ' + dates : '', \"</h3>\");\n            html += '<ul>';\n            job.bullets.forEach((b)=>{\n                html += \"<li>\".concat(escapeHTML(b), \"</li>\");\n            });\n            html += '</ul>';\n        });\n    }\n    // Education\n    if ((_resume_education = resume.education) === null || _resume_education === void 0 ? void 0 : _resume_education.length) {\n        html += '<h2>Education</h2>';\n        resume.education.forEach((edu)=>{\n            const dates = [\n                edu.from,\n                edu.to\n            ].filter(Boolean).map(escapeHTML).join(' – ');\n            html += \"<h3>\".concat(escapeHTML(edu.degree), \" | \").concat(escapeHTML(edu.institution)).concat(dates ? ' | ' + dates : '', \"</h3>\");\n        });\n    }\n    // Skills: comma-separated list\n    if ((_resume_skills = resume.skills) === null || _resume_skills === void 0 ? void 0 : _resume_skills.length) {\n        html += '<h2>Skills & Abilities</h2>';\n        const skillsLine = resume.skills.map(escapeHTML).join(', ');\n        html += \"<p>\".concat(skillsLine, \"</p>\");\n    }\n    // Certifications\n    if ((_resume_certifications = resume.certifications) === null || _resume_certifications === void 0 ? void 0 : _resume_certifications.length) {\n        html += '<h2>Certifications</h2><ul>';\n        resume.certifications.forEach((cert)=>{\n            if (typeof cert === 'string') {\n                html += '<li>' + escapeHTML(cert) + '</li>';\n            } else {\n                const issuer = cert.issuer ? ' | ' + escapeHTML(cert.issuer) : '';\n                html += '<li>' + escapeHTML(cert.name) + issuer + '</li>';\n            }\n        });\n        html += '</ul>';\n    }\n    // Awards\n    if ((_resume_awards = resume.awards) === null || _resume_awards === void 0 ? void 0 : _resume_awards.length) {\n        html += '<h2>Awards & Honors</h2><ul>';\n        resume.awards.forEach((award)=>{\n            const date = award.date ? \" | \".concat(escapeHTML(award.date)) : '';\n            html += \"<li>\".concat(escapeHTML(award.title)).concat(date, \"</li>\");\n        });\n        html += '</ul>';\n    }\n    // Projects\n    if ((_resume_projects = resume.projects) === null || _resume_projects === void 0 ? void 0 : _resume_projects.length) {\n        html += '<h2>Projects</h2>';\n        resume.projects.forEach((proj)=>{\n            var _proj_technologies;\n            html += \"<h3>\".concat(escapeHTML(proj.name), \"</h3><p>\").concat(escapeHTML(proj.description), \"</p>\");\n            if ((_proj_technologies = proj.technologies) === null || _proj_technologies === void 0 ? void 0 : _proj_technologies.length) {\n                html += \"<p><strong>Technologies:</strong> \".concat(proj.technologies.map(escapeHTML).join(', '), \"</p>\");\n            }\n            if (proj.link) {\n                html += '<p><a href=\"'.concat(escapeHTML(proj.link), '\" target=\"_blank\">').concat(escapeHTML(proj.link), \"</a></p>\");\n            }\n        });\n    }\n    // Languages\n    if ((_resume_languages = resume.languages) === null || _resume_languages === void 0 ? void 0 : _resume_languages.length) {\n        html += '<h2>Languages</h2><ul>';\n        resume.languages.forEach((lang)=>{\n            html += \"<li>\".concat(escapeHTML(lang), \"</li>\");\n        });\n        html += '</ul>';\n    }\n    // Wrap in container for editor styling\n    return '<div class=\"resume-content\">'.concat(html, \"</div>\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/resumeSerializer.ts\n"));

/***/ })

});