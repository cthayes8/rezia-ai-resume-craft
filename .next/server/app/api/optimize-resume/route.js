/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/optimize-resume/route";
exports.ids = ["app/api/optimize-resume/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_colinhayes_rezia_ai_resume_craft_src_app_api_optimize_resume_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/optimize-resume/route.ts */ \"(rsc)/./src/app/api/optimize-resume/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/optimize-resume/route\",\n        pathname: \"/api/optimize-resume\",\n        filename: \"route\",\n        bundlePath: \"app/api/optimize-resume/route\"\n    },\n    resolvedPagePath: \"/Users/colinhayes/rezia-ai-resume-craft/src/app/api/optimize-resume/route.ts\",\n    nextConfigOutput,\n    userland: _Users_colinhayes_rezia_ai_resume_craft_src_app_api_optimize_resume_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZvcHRpbWl6ZS1yZXN1bWUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm9wdGltaXplLXJlc3VtZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm9wdGltaXplLXJlc3VtZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmNvbGluaGF5ZXMlMkZyZXppYS1haS1yZXN1bWUtY3JhZnQlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGY29saW5oYXllcyUyRnJlemlhLWFpLXJlc3VtZS1jcmFmdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDNEI7QUFDekc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9jb2xpbmhheWVzL3JlemlhLWFpLXJlc3VtZS1jcmFmdC9zcmMvYXBwL2FwaS9vcHRpbWl6ZS1yZXN1bWUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL29wdGltaXplLXJlc3VtZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL29wdGltaXplLXJlc3VtZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvb3B0aW1pemUtcmVzdW1lL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2NvbGluaGF5ZXMvcmV6aWEtYWktcmVzdW1lLWNyYWZ0L3NyYy9hcHAvYXBpL29wdGltaXplLXJlc3VtZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/optimize-resume/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/optimize-resume/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n// heavy parsing steps moved to Pages API for faster warm lambdas\n// Removed direct import of internal API handlers; using HTTP fetch to Pages API instead\nconst runtime = 'nodejs';\n/**\n * API Route: Full orchestration of resume optimization as a single Node.js function\n */ async function POST(req) {\n    try {\n        const { resumeText, resumeData, jobDescription, templateId, fileName } = await req.json();\n        if (!jobDescription || !resumeText && !resumeData) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing resumeData or resumeText, and jobDescription'\n            }, {\n                status: 400\n            });\n        }\n        // Authenticate user\n        const session = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.auth)();\n        const userId = session.userId;\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        // Ensure user record\n        const clerkUser = await (await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__.clerkClient)()).users.getUser(userId);\n        const email = clerkUser.emailAddresses[0]?.emailAddress || '';\n        const fullName = `${clerkUser.firstName || ''} ${clerkUser.lastName || ''}`.trim();\n        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.upsert({\n            where: {\n                id: userId\n            },\n            create: {\n                id: userId,\n                email,\n                fullName\n            },\n            update: {\n                email,\n                fullName\n            }\n        });\n        // Prepare baseUrl for API calls\n        const protocol =  true ? 'http' : 0;\n        const host = req.headers.get('host');\n        const baseUrl = `${protocol}://${host}`;\n        // Always save resume file metadata so we have a file record\n        const rawText = resumeText ?? '';\n        const normalizedText = rawText.replace(/\\s+/g, ' ').trim();\n        const originalTextHash = (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)('sha256').update(normalizedText).digest('hex');\n        const resumeFile = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.resumeFile.create({\n            data: {\n                userId,\n                fileName: fileName || '',\n                filePath: '',\n                originalTextHash\n            }\n        });\n        // Determine parsed resume: prefer provided resumeData, else cached or LLM parse\n        let parsedResume;\n        if (resumeData) {\n            parsedResume = resumeData;\n        } else {\n            // Try to load cached parsedData\n            const saved = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.savedResume.findFirst({\n                where: {\n                    userId,\n                    textHash: originalTextHash\n                }\n            });\n            if (saved?.parsedData) {\n                parsedResume = saved.parsedData;\n            } else {\n                const parseRes = await fetch(`${baseUrl}/api/parse-resume`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        resume: resumeText,\n                        jobDescription\n                    })\n                });\n                if (!parseRes.ok) throw new Error('parse-resume failed');\n                parsedResume = (await parseRes.json()).parsedResume;\n            }\n        }\n        // 1. Extract JD info via Pages API (baseUrl defined earlier)\n        const jdRes = await fetch(`${baseUrl}/api/extract-jd-info`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                jobDescription\n            })\n        });\n        if (!jdRes.ok) throw new Error('extract-jd-info failed');\n        const { targetTitle, targetCompany, requirements } = await jdRes.json();\n        // Extract skills/keywords separately\n        const ekRes = await fetch(`${baseUrl}/api/extract-keywords`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                jobDescription\n            })\n        });\n        if (!ekRes.ok) throw new Error('extract-keywords failed');\n        const { keywords } = await ekRes.json();\n        // Deep-clone to preserve the original parsed resume before mutation\n        const originalParsedResume = JSON.parse(JSON.stringify(parsedResume));\n        // Work on a separate copy for updates\n        const updated = JSON.parse(JSON.stringify(parsedResume));\n        // Ensure certifications and awards from parsed resume persist into optimized version\n        updated.certifications = parsedResume.certifications || [];\n        updated.awards = parsedResume.awards || [];\n        // 3. Map keywords via Pages API\n        const mapRes = await fetch(`${baseUrl}/api/map-keywords`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                resumeData: updated,\n                keywords\n            })\n        });\n        if (!mapRes.ok) throw new Error('map-keywords failed');\n        const { assignments } = await mapRes.json();\n        // 4. Rewrite bullets in parallel with limited concurrency, avoiding duplicate start verbs\n        const rewriteResults = [];\n        // Track used leading verbs to avoid repetition\n        const usedVerbs = [];\n        // Prepare tasks for each bullet\n        const tasks = [];\n        updated.work.forEach((workItem, wi)=>{\n            workItem.bullets.forEach((bullet, bi)=>{\n                const assignment = assignments.find((a)=>a.workIndex === wi && a.bulletIndex === bi);\n                tasks.push({\n                    wi,\n                    bi,\n                    bullet,\n                    assignedKeywords: assignment?.assignedKeywords || []\n                });\n            });\n        });\n        const concurrency = 3;\n        for(let i = 0; i < tasks.length; i += concurrency){\n            const batch = tasks.slice(i, i + concurrency);\n            // Send rewrite requests, passing already used verbs\n            const results = await Promise.all(batch.map(async ({ wi, bi, bullet, assignedKeywords })=>{\n                const bulletRes = await fetch(`${baseUrl}/api/rewrite-bullet`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        bullet,\n                        keywords: assignedKeywords,\n                        jobTitle: updated.work[wi].title,\n                        company: updated.work[wi].company,\n                        jobDescription,\n                        skills: updated.skills,\n                        targetTitle,\n                        targetCompany,\n                        requirements,\n                        usedVerbs\n                    })\n                });\n                if (!bulletRes.ok) throw new Error('rewrite-bullet failed');\n                const { rewrittenBullet, keywordsUsed } = await bulletRes.json();\n                return {\n                    wi,\n                    bi,\n                    rewrittenBullet,\n                    keywordsUsed\n                };\n            }));\n            // Apply results and capture leading verbs\n            results.forEach(({ wi, bi, rewrittenBullet, keywordsUsed })=>{\n                updated.work[wi].bullets[bi] = rewrittenBullet;\n                rewriteResults.push({\n                    workIndex: wi,\n                    bulletIndex: bi,\n                    rewrittenBullet,\n                    keywordsUsed\n                });\n                // Extract first word as verb and track it\n                const firstWord = rewrittenBullet.trim().split(/\\s+/)[0].replace(/[^A-Za-z]/g, '');\n                if (firstWord) usedVerbs.push(firstWord.toLowerCase());\n            });\n        }\n        // 5. Rewrite projects if present\n        if (updated.projects && updated.projects.length) {\n            const projRes = await fetch(`${baseUrl}/api/rewrite-projects`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    projects: updated.projects,\n                    keywords,\n                    requirements,\n                    targetTitle,\n                    targetCompany,\n                    jobDescription,\n                    skills: updated.skills,\n                    summary: updated.summary || parsedResume.summary\n                })\n            });\n            if (!projRes.ok) throw new Error('rewrite-projects failed');\n            const { rewrittenProjects } = await projRes.json();\n            updated.projects = rewrittenProjects;\n        }\n        // 5. Rewrite summary\n        // 5. Rewrite summary via Pages API\n        // Build an experience snapshot for prompt context\n        const companies = Array.from(new Set(parsedResume.work.map((w)=>w.company))).join(', ');\n        const titles = Array.from(new Set(parsedResume.work.map((w)=>w.title))).join(', ');\n        const parseYear = (s)=>{\n            const m = s.match(/\\d{4}/);\n            return m ? parseInt(m[0], 10) : null;\n        };\n        const endYears = parsedResume.work.map((w)=>parseYear(w.to || '') || new Date().getFullYear()).filter((y)=>!!y);\n        const startYears = parsedResume.work.map((w)=>parseYear(w.from || '') || endYears[0] || new Date().getFullYear()).filter((y)=>!!y);\n        const yearsExp = endYears.length && startYears.length ? Math.max(...endYears) - Math.min(...startYears) : null;\n        const experienceSnapshot = [\n            yearsExp ? `${yearsExp}+ years of experience` : '',\n            companies ? `across ${companies}` : '',\n            titles ? `roles as ${titles}` : ''\n        ].filter(Boolean).join(', ') + '.';\n        const summaryRes = await fetch(`${baseUrl}/api/rewrite-summary`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                originalSummary: parsedResume.summary,\n                optimizedBullets: updated.work.flatMap((w)=>w.bullets),\n                projects: updated.projects || [],\n                skills: updated.skills,\n                targetTitle,\n                targetCompany,\n                requirements,\n                keywords,\n                jobDescription,\n                experienceSnapshot\n            })\n        });\n        if (!summaryRes.ok) throw new Error('rewrite-summary failed');\n        const { rewrittenSummary } = await summaryRes.json();\n        updated.summary = rewrittenSummary;\n        // 6. Rewrite skills\n        // 6. Rewrite skills via Pages API\n        const skillsRes = await fetch(`${baseUrl}/api/rewrite-skills`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                originalSkills: updated.skills,\n                optimizedSummary: updated.summary,\n                optimizedBullets: updated.work.flatMap((w)=>w.bullets),\n                keywords,\n                targetTitle,\n                targetCompany,\n                requirements,\n                jobDescription\n            })\n        });\n        if (!skillsRes.ok) throw new Error('rewrite-skills failed');\n        const { rewrittenSkills } = await skillsRes.json();\n        updated.skills = rewrittenSkills;\n        // 7. Rewrite projects via Pages API (if present)\n        if (parsedResume.projects && parsedResume.projects.length > 0) {\n            const projRes = await fetch(`${baseUrl}/api/rewrite-projects`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    projects: parsedResume.projects,\n                    keywords,\n                    requirements,\n                    targetTitle,\n                    targetCompany,\n                    jobDescription,\n                    skills: updated.skills,\n                    summary: updated.summary\n                })\n            });\n            if (!projRes.ok) throw new Error('rewrite-projects failed');\n            const { rewrittenProjects } = await projRes.json();\n            updated.projects = rewrittenProjects;\n        }\n        // Ensure certifications & awards flow through to optimized resume\n        updated.certifications = parsedResume.certifications || [];\n        updated.awards = parsedResume.awards || [];\n        // 8. Persist optimization run\n        const runData = {\n            userId,\n            resumeFileId: resumeFile.id,\n            jobDescription,\n            templateId: String(templateId),\n            originalText: JSON.stringify(originalParsedResume),\n            optimizedText: JSON.stringify(updated),\n            bulletRewrites: rewriteResults,\n            summaryRewrite: updated.summary,\n            skillsRewrite: JSON.stringify(updated.skills),\n            keywords,\n            requirements,\n            targetTitle,\n            targetCompany,\n            aiModel: 'o3-mini-2025-01-31',\n            tokenCount: 0,\n            costUsd: 0\n        };\n        const run = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.optimizationRun.create({\n            data: runData\n        });\n        // Return full result, ensuring certifications & awards are included\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            runId: run.id,\n            originalResume: originalParsedResume,\n            optimizedResume: {\n                ...updated,\n                certifications: parsedResume.certifications || [],\n                awards: parsedResume.awards || []\n            },\n            keywords,\n            requirements,\n            targetTitle,\n            targetCompany\n        });\n    } catch (error) {\n        console.error('Error in optimize-resume:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || 'Internal error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9vcHRpbWl6ZS1yZXN1bWUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMkM7QUFDQztBQUNPO0FBQ2I7QUFDRjtBQUdwQyxpRUFBaUU7QUFDakUsd0ZBQXdGO0FBRWpGLE1BQU1LLFVBQVUsU0FBUztBQWFoQzs7Q0FFQyxHQUNNLGVBQWVDLEtBQUtDLEdBQVk7SUFDckMsSUFBSTtRQUNGLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLGNBQWMsRUFBRUMsVUFBVSxFQUFFQyxRQUFRLEVBQUUsR0FBSSxNQUFNTCxJQUFJTSxJQUFJO1FBQ3hGLElBQUksQ0FBQ0gsa0JBQW1CLENBQUNGLGNBQWMsQ0FBQ0MsWUFBYTtZQUNuRCxPQUFPVCxxREFBWUEsQ0FBQ2EsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQXVELEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUM1RztRQUVBLG9CQUFvQjtRQUNwQixNQUFNQyxVQUFVLE1BQU1mLDBEQUFJQTtRQUMxQixNQUFNZ0IsU0FBU0QsUUFBUUMsTUFBTTtRQUM3QixJQUFJLENBQUNBLFFBQVE7WUFDWCxPQUFPakIscURBQVlBLENBQUNhLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUFlLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUNwRTtRQUVBLHFCQUFxQjtRQUNyQixNQUFNRyxZQUFZLE1BQU0sQ0FBQyxNQUFNaEIsaUVBQVdBLEVBQUMsRUFBR2lCLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSDtRQUM1RCxNQUFNSSxRQUFRSCxVQUFVSSxjQUFjLENBQUMsRUFBRSxFQUFFQyxnQkFBZ0I7UUFDM0QsTUFBTUMsV0FBVyxHQUFHTixVQUFVTyxTQUFTLElBQUksR0FBRyxDQUFDLEVBQUVQLFVBQVVRLFFBQVEsSUFBSSxJQUFJLENBQUNDLElBQUk7UUFDaEYsTUFBTXhCLCtDQUFNQSxDQUFDeUIsSUFBSSxDQUFDQyxNQUFNLENBQUM7WUFDdkJDLE9BQU87Z0JBQUVDLElBQUlk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LEVBQUU7Z0JBQ2pEQyxRQUFRekIsYUFBYXlCLE1BQU0sSUFBSSxFQUFFO1lBQ25DO1lBQ0FMO1lBQ0FGO1lBQ0FGO1lBQ0FDO1FBQ0Y7SUFDRixFQUFFLE9BQU9yRCxPQUFZO1FBQ25CMEosUUFBUTFKLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU9kLHFEQUFZQSxDQUFDYSxJQUFJLENBQUM7WUFBRUMsT0FBT0EsTUFBTTJKLE9BQU8sSUFBSTtRQUFpQixHQUFHO1lBQUUxSixRQUFRO1FBQUk7SUFDdkY7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2NvbGluaGF5ZXMvcmV6aWEtYWktcmVzdW1lLWNyYWZ0L3NyYy9hcHAvYXBpL29wdGltaXplLXJlc3VtZS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBhdXRoIH0gZnJvbSAnQGNsZXJrL25leHRqcy9zZXJ2ZXInO1xuaW1wb3J0IHsgY2xlcmtDbGllbnQgfSBmcm9tICdAY2xlcmsvbmV4dGpzL3NlcnZlcic7XG5pbXBvcnQgeyBwcmlzbWEgfSBmcm9tICdAL2xpYi9wcmlzbWEnO1xuaW1wb3J0IHsgY3JlYXRlSGFzaCB9IGZyb20gJ2NyeXB0byc7XG5cbmltcG9ydCB0eXBlIHsgUmVzdW1lRGF0YSwgRXh0cmFjdEpESW5mb1Jlc3BvbnNlLCBQYXJzZVJlc3VtZVJlc3BvbnNlLCBNYXBLZXl3b3Jkc1Jlc3BvbnNlLCBSZXdyaXRlQnVsbGV0UmVzcG9uc2UsIFJld3JpdGVTdW1tYXJ5UmVzcG9uc2UsIFJld3JpdGVTa2lsbHNSZXNwb25zZSwgT3B0aW1pemF0aW9uUnVuRGF0YSwgQnVsbGV0UmV3cml0ZVJlc3VsdCB9IGZyb20gJ0AvdHlwZXMvcmVzdW1lJztcbi8vIGhlYXZ5IHBhcnNpbmcgc3RlcHMgbW92ZWQgdG8gUGFnZXMgQVBJIGZvciBmYXN0ZXIgd2FybSBsYW1iZGFzXG4vLyBSZW1vdmVkIGRpcmVjdCBpbXBvcnQgb2YgaW50ZXJuYWwgQVBJIGhhbmRsZXJzOyB1c2luZyBIVFRQIGZldGNoIHRvIFBhZ2VzIEFQSSBpbnN0ZWFkXG5cbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XG5cbmludGVyZmFjZSBPcHRpbWl6ZVJlc3VtZVJlcXVlc3Qge1xuICByZXN1bWVUZXh0Pzogc3RyaW5nO1xuICAvKipcbiAgICogT3B0aW9uYWwgcGFyc2VkIHJlc3VtZSBkYXRhIHRvIHNraXAgcGFyc2luZyBzdGVwXG4gICAqL1xuICByZXN1bWVEYXRhPzogUmVzdW1lRGF0YTtcbiAgam9iRGVzY3JpcHRpb246IHN0cmluZztcbiAgdGVtcGxhdGVJZD86IHN0cmluZztcbiAgZmlsZU5hbWU/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQVBJIFJvdXRlOiBGdWxsIG9yY2hlc3RyYXRpb24gb2YgcmVzdW1lIG9wdGltaXphdGlvbiBhcyBhIHNpbmdsZSBOb2RlLmpzIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogUmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcmVzdW1lVGV4dCwgcmVzdW1lRGF0YSwgam9iRGVzY3JpcHRpb24sIHRlbXBsYXRlSWQsIGZpbGVOYW1lIH0gPSAoYXdhaXQgcmVxLmpzb24oKSkgYXMgT3B0aW1pemVSZXN1bWVSZXF1ZXN0O1xuICAgIGlmICgham9iRGVzY3JpcHRpb24gfHwgKCFyZXN1bWVUZXh0ICYmICFyZXN1bWVEYXRhKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdNaXNzaW5nIHJlc3VtZURhdGEgb3IgcmVzdW1lVGV4dCwgYW5kIGpvYkRlc2NyaXB0aW9uJyB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgIH1cblxuICAgIC8vIEF1dGhlbnRpY2F0ZSB1c2VyXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKTtcbiAgICBjb25zdCB1c2VySWQgPSBzZXNzaW9uLnVzZXJJZDtcbiAgICBpZiAoIXVzZXJJZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuXG4gICAgLy8gRW5zdXJlIHVzZXIgcmVjb3JkXG4gICAgY29uc3QgY2xlcmtVc2VyID0gYXdhaXQgKGF3YWl0IGNsZXJrQ2xpZW50KCkpLnVzZXJzLmdldFVzZXIodXNlcklkKTtcbiAgICBjb25zdCBlbWFpbCA9IGNsZXJrVXNlci5lbWFpbEFkZHJlc3Nlc1swXT8uZW1haWxBZGRyZXNzIHx8ICcnO1xuICAgIGNvbnN0IGZ1bGxOYW1lID0gYCR7Y2xlcmtVc2VyLmZpcnN0TmFtZSB8fCAnJ30gJHtjbGVya1VzZXIubGFzdE5hbWUgfHwgJyd9YC50cmltKCk7XG4gICAgYXdhaXQgcHJpc21hLnVzZXIudXBzZXJ0KHtcbiAgICAgIHdoZXJlOiB7IGlkOiB1c2VySWQgfSxcbiAgICAgIGNyZWF0ZTogeyBpZDogdXNlcklkLCBlbWFpbCwgZnVsbE5hbWUgfSxcbiAgICAgIHVwZGF0ZTogeyBlbWFpbCwgZnVsbE5hbWUgfSxcbiAgICB9KTtcblxuICAgIC8vIFByZXBhcmUgYmFzZVVybCBmb3IgQVBJIGNhbGxzXG4gICAgY29uc3QgcHJvdG9jb2wgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/ICdodHRwJyA6ICdodHRwcyc7XG4gICAgY29uc3QgaG9zdCA9IHJlcS5oZWFkZXJzLmdldCgnaG9zdCcpO1xuICAgIGNvbnN0IGJhc2VVcmwgPSBgJHtwcm90b2NvbH06Ly8ke2hvc3R9YDtcbiAgICAvLyBBbHdheXMgc2F2ZSByZXN1bWUgZmlsZSBtZXRhZGF0YSBzbyB3ZSBoYXZlIGEgZmlsZSByZWNvcmRcbiAgICBjb25zdCByYXdUZXh0ID0gcmVzdW1lVGV4dCA/PyAnJztcbiAgICBjb25zdCBub3JtYWxpemVkVGV4dCA9IHJhd1RleHQucmVwbGFjZSgvXFxzKy9nLCAnICcpLnRyaW0oKTtcbiAgICBjb25zdCBvcmlnaW5hbFRleHRIYXNoID0gY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKG5vcm1hbGl6ZWRUZXh0KS5kaWdlc3QoJ2hleCcpO1xuICAgIGNvbnN0IHJlc3VtZUZpbGUgPSBhd2FpdCBwcmlzbWEucmVzdW1lRmlsZS5jcmVhdGUoe1xuICAgICAgZGF0YTogeyB1c2VySWQsIGZpbGVOYW1lOiBmaWxlTmFtZSB8fCAnJywgZmlsZVBhdGg6ICcnLCBvcmlnaW5hbFRleHRIYXNoIH0sXG4gICAgfSk7XG4gICAgXG4gICAgLy8gRGV0ZXJtaW5lIHBhcnNlZCByZXN1bWU6IHByZWZlciBwcm92aWRlZCByZXN1bWVEYXRhLCBlbHNlIGNhY2hlZCBvciBMTE0gcGFyc2VcbiAgICBsZXQgcGFyc2VkUmVzdW1lOiBSZXN1bWVEYXRhO1xuICAgIGlmIChyZXN1bWVEYXRhKSB7XG4gICAgICBwYXJzZWRSZXN1bWUgPSByZXN1bWVEYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBUcnkgdG8gbG9hZCBjYWNoZWQgcGFyc2VkRGF0YVxuICAgICAgY29uc3Qgc2F2ZWQgPSBhd2FpdCBwcmlzbWEuc2F2ZWRSZXN1bWUuZmluZEZpcnN0KHsgd2hlcmU6IHsgdXNlcklkLCB0ZXh0SGFzaDogb3JpZ2luYWxUZXh0SGFzaCB9IH0pO1xuICAgICAgaWYgKHNhdmVkPy5wYXJzZWREYXRhKSB7XG4gICAgICAgIHBhcnNlZFJlc3VtZSA9IHNhdmVkLnBhcnNlZERhdGEgYXMgUmVzdW1lRGF0YTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHBhcnNlUmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL3BhcnNlLXJlc3VtZWAsIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHJlc3VtZTogcmVzdW1lVGV4dCwgam9iRGVzY3JpcHRpb24gfSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXBhcnNlUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ3BhcnNlLXJlc3VtZSBmYWlsZWQnKTtcbiAgICAgICAgcGFyc2VkUmVzdW1lID0gKGF3YWl0IHBhcnNlUmVzLmpzb24oKSkucGFyc2VkUmVzdW1lIGFzIFJlc3VtZURhdGE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gMS4gRXh0cmFjdCBKRCBpbmZvIHZpYSBQYWdlcyBBUEkgKGJhc2VVcmwgZGVmaW5lZCBlYXJsaWVyKVxuICAgIGNvbnN0IGpkUmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL2V4dHJhY3QtamQtaW5mb2AsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGpvYkRlc2NyaXB0aW9uIH0pLFxuICAgIH0pO1xuICAgIGlmICghamRSZXMub2spIHRocm93IG5ldyBFcnJvcignZXh0cmFjdC1qZC1pbmZvIGZhaWxlZCcpO1xuICAgIGNvbnN0IHsgdGFyZ2V0VGl0bGUsIHRhcmdldENvbXBhbnksIHJlcXVpcmVtZW50cyB9ID0gKGF3YWl0IGpkUmVzLmpzb24oKSkgYXMgRXh0cmFjdEpESW5mb1Jlc3BvbnNlO1xuICAgIC8vIEV4dHJhY3Qgc2tpbGxzL2tleXdvcmRzIHNlcGFyYXRlbHlcbiAgICBjb25zdCBla1JlcyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L2FwaS9leHRyYWN0LWtleXdvcmRzYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgam9iRGVzY3JpcHRpb24gfSksXG4gICAgfSk7XG4gICAgaWYgKCFla1Jlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdleHRyYWN0LWtleXdvcmRzIGZhaWxlZCcpO1xuICAgIGNvbnN0IHsga2V5d29yZHMgfSA9IChhd2FpdCBla1Jlcy5qc29uKCkpIGFzIHsga2V5d29yZHM6IHN0cmluZ1tdIH07XG5cbiAgICAvLyBEZWVwLWNsb25lIHRvIHByZXNlcnZlIHRoZSBvcmlnaW5hbCBwYXJzZWQgcmVzdW1lIGJlZm9yZSBtdXRhdGlvblxuICAgIGNvbnN0IG9yaWdpbmFsUGFyc2VkUmVzdW1lOiBSZXN1bWVEYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwYXJzZWRSZXN1bWUpKTtcbiAgICAvLyBXb3JrIG9uIGEgc2VwYXJhdGUgY29weSBmb3IgdXBkYXRlc1xuICAgIGNvbnN0IHVwZGF0ZWQ6IFJlc3VtZURhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHBhcnNlZFJlc3VtZSkpO1xuICAgIC8vIEVuc3VyZSBjZXJ0aWZpY2F0aW9ucyBhbmQgYXdhcmRzIGZyb20gcGFyc2VkIHJlc3VtZSBwZXJzaXN0IGludG8gb3B0aW1pemVkIHZlcnNpb25cbiAgICB1cGRhdGVkLmNlcnRpZmljYXRpb25zID0gcGFyc2VkUmVzdW1lLmNlcnRpZmljYXRpb25zIHx8IFtdO1xuICAgIHVwZGF0ZWQuYXdhcmRzID0gcGFyc2VkUmVzdW1lLmF3YXJkcyB8fCBbXTtcblxuICAgIC8vIDMuIE1hcCBrZXl3b3JkcyB2aWEgUGFnZXMgQVBJXG4gICAgY29uc3QgbWFwUmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL21hcC1rZXl3b3Jkc2AsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHJlc3VtZURhdGE6IHVwZGF0ZWQsIGtleXdvcmRzIH0pLFxuICAgIH0pO1xuICAgIGlmICghbWFwUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ21hcC1rZXl3b3JkcyBmYWlsZWQnKTtcbiAgICBjb25zdCB7IGFzc2lnbm1lbnRzIH0gPSAoYXdhaXQgbWFwUmVzLmpzb24oKSkgYXMgTWFwS2V5d29yZHNSZXNwb25zZTtcblxuICAgIC8vIDQuIFJld3JpdGUgYnVsbGV0cyBpbiBwYXJhbGxlbCB3aXRoIGxpbWl0ZWQgY29uY3VycmVuY3ksIGF2b2lkaW5nIGR1cGxpY2F0ZSBzdGFydCB2ZXJic1xuICAgIGNvbnN0IHJld3JpdGVSZXN1bHRzOiBCdWxsZXRSZXdyaXRlUmVzdWx0W10gPSBbXTtcbiAgICAvLyBUcmFjayB1c2VkIGxlYWRpbmcgdmVyYnMgdG8gYXZvaWQgcmVwZXRpdGlvblxuICAgIGNvbnN0IHVzZWRWZXJiczogc3RyaW5nW10gPSBbXTtcbiAgICAvLyBQcmVwYXJlIHRhc2tzIGZvciBlYWNoIGJ1bGxldFxuICAgIGNvbnN0IHRhc2tzOiB7IHdpOiBudW1iZXI7IGJpOiBudW1iZXI7IGJ1bGxldDogc3RyaW5nOyBhc3NpZ25lZEtleXdvcmRzOiBzdHJpbmdbXSB9W10gPSBbXTtcbiAgICB1cGRhdGVkLndvcmsuZm9yRWFjaCgod29ya0l0ZW0sIHdpKSA9PiB7XG4gICAgICB3b3JrSXRlbS5idWxsZXRzLmZvckVhY2goKGJ1bGxldCwgYmkpID0+IHtcbiAgICAgICAgY29uc3QgYXNzaWdubWVudCA9IGFzc2lnbm1lbnRzLmZpbmQoKGEpID0+IGEud29ya0luZGV4ID09PSB3aSAmJiBhLmJ1bGxldEluZGV4ID09PSBiaSk7XG4gICAgICAgIHRhc2tzLnB1c2goeyB3aSwgYmksIGJ1bGxldCwgYXNzaWduZWRLZXl3b3JkczogYXNzaWdubWVudD8uYXNzaWduZWRLZXl3b3JkcyB8fCBbXSB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGNvbnN0IGNvbmN1cnJlbmN5ID0gMztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhc2tzLmxlbmd0aDsgaSArPSBjb25jdXJyZW5jeSkge1xuICAgICAgY29uc3QgYmF0Y2ggPSB0YXNrcy5zbGljZShpLCBpICsgY29uY3VycmVuY3kpO1xuICAgICAgLy8gU2VuZCByZXdyaXRlIHJlcXVlc3RzLCBwYXNzaW5nIGFscmVhZHkgdXNlZCB2ZXJic1xuICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBiYXRjaC5tYXAoYXN5bmMgKHsgd2ksIGJpLCBidWxsZXQsIGFzc2lnbmVkS2V5d29yZHMgfSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGJ1bGxldFJlcyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L2FwaS9yZXdyaXRlLWJ1bGxldGAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgIGJ1bGxldCxcbiAgICAgICAgICAgICAga2V5d29yZHM6IGFzc2lnbmVkS2V5d29yZHMsXG4gICAgICAgICAgICAgIGpvYlRpdGxlOiB1cGRhdGVkLndvcmtbd2ldLnRpdGxlLFxuICAgICAgICAgICAgICBjb21wYW55OiB1cGRhdGVkLndvcmtbd2ldLmNvbXBhbnksXG4gICAgICAgICAgICAgIGpvYkRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICBza2lsbHM6IHVwZGF0ZWQuc2tpbGxzLFxuICAgICAgICAgICAgICB0YXJnZXRUaXRsZSxcbiAgICAgICAgICAgICAgdGFyZ2V0Q29tcGFueSxcbiAgICAgICAgICAgICAgcmVxdWlyZW1lbnRzLFxuICAgICAgICAgICAgICB1c2VkVmVyYnMsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAoIWJ1bGxldFJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdyZXdyaXRlLWJ1bGxldCBmYWlsZWQnKTtcbiAgICAgICAgICBjb25zdCB7IHJld3JpdHRlbkJ1bGxldCwga2V5d29yZHNVc2VkIH0gPSAoYXdhaXQgYnVsbGV0UmVzLmpzb24oKSkgYXMgUmV3cml0ZUJ1bGxldFJlc3BvbnNlO1xuICAgICAgICAgIHJldHVybiB7IHdpLCBiaSwgcmV3cml0dGVuQnVsbGV0LCBrZXl3b3Jkc1VzZWQgfTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgICAvLyBBcHBseSByZXN1bHRzIGFuZCBjYXB0dXJlIGxlYWRpbmcgdmVyYnNcbiAgICAgIHJlc3VsdHMuZm9yRWFjaCgoeyB3aSwgYmksIHJld3JpdHRlbkJ1bGxldCwga2V5d29yZHNVc2VkIH0pID0+IHtcbiAgICAgICAgdXBkYXRlZC53b3JrW3dpXS5idWxsZXRzW2JpXSA9IHJld3JpdHRlbkJ1bGxldDtcbiAgICAgICAgcmV3cml0ZVJlc3VsdHMucHVzaCh7IHdvcmtJbmRleDogd2ksIGJ1bGxldEluZGV4OiBiaSwgcmV3cml0dGVuQnVsbGV0LCBrZXl3b3Jkc1VzZWQgfSk7XG4gICAgICAgIC8vIEV4dHJhY3QgZmlyc3Qgd29yZCBhcyB2ZXJiIGFuZCB0cmFjayBpdFxuICAgICAgICBjb25zdCBmaXJzdFdvcmQgPSByZXdyaXR0ZW5CdWxsZXQudHJpbSgpLnNwbGl0KC9cXHMrLylbMF0ucmVwbGFjZSgvW15BLVphLXpdL2csICcnKTtcbiAgICAgICAgaWYgKGZpcnN0V29yZCkgdXNlZFZlcmJzLnB1c2goZmlyc3RXb3JkLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIDUuIFJld3JpdGUgcHJvamVjdHMgaWYgcHJlc2VudFxuICAgIGlmICh1cGRhdGVkLnByb2plY3RzICYmIHVwZGF0ZWQucHJvamVjdHMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBwcm9qUmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL3Jld3JpdGUtcHJvamVjdHNgLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHByb2plY3RzOiB1cGRhdGVkLnByb2plY3RzLFxuICAgICAgICAgIGtleXdvcmRzLFxuICAgICAgICAgIHJlcXVpcmVtZW50cyxcbiAgICAgICAgICB0YXJnZXRUaXRsZSxcbiAgICAgICAgICB0YXJnZXRDb21wYW55LFxuICAgICAgICAgIGpvYkRlc2NyaXB0aW9uLFxuICAgICAgICAgIHNraWxsczogdXBkYXRlZC5za2lsbHMsXG4gICAgICAgICAgc3VtbWFyeTogdXBkYXRlZC5zdW1tYXJ5IHx8IHBhcnNlZFJlc3VtZS5zdW1tYXJ5LFxuICAgICAgICB9KSxcbiAgICAgIH0pO1xuICAgICAgaWYgKCFwcm9qUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ3Jld3JpdGUtcHJvamVjdHMgZmFpbGVkJyk7XG4gICAgICBjb25zdCB7IHJld3JpdHRlblByb2plY3RzIH0gPSBhd2FpdCBwcm9qUmVzLmpzb24oKSBhcyB7IHJld3JpdHRlblByb2plY3RzOiB0eXBlb2YgdXBkYXRlZC5wcm9qZWN0cyB9O1xuICAgICAgdXBkYXRlZC5wcm9qZWN0cyA9IHJld3JpdHRlblByb2plY3RzO1xuICAgIH1cblxuICAgIC8vIDUuIFJld3JpdGUgc3VtbWFyeVxuICAgIC8vIDUuIFJld3JpdGUgc3VtbWFyeSB2aWEgUGFnZXMgQVBJXG4gICAgLy8gQnVpbGQgYW4gZXhwZXJpZW5jZSBzbmFwc2hvdCBmb3IgcHJvbXB0IGNvbnRleHRcbiAgICBjb25zdCBjb21wYW5pZXMgPSBBcnJheS5mcm9tKG5ldyBTZXQocGFyc2VkUmVzdW1lLndvcmsubWFwKHcgPT4gdy5jb21wYW55KSkpLmpvaW4oJywgJyk7XG4gICAgY29uc3QgdGl0bGVzID0gQXJyYXkuZnJvbShuZXcgU2V0KHBhcnNlZFJlc3VtZS53b3JrLm1hcCh3ID0+IHcudGl0bGUpKSkuam9pbignLCAnKTtcbiAgICBjb25zdCBwYXJzZVllYXIgPSAoczogc3RyaW5nKSA9PiB7XG4gICAgICBjb25zdCBtID0gcy5tYXRjaCgvXFxkezR9Lyk7XG4gICAgICByZXR1cm4gbSA/IHBhcnNlSW50KG1bMF0sIDEwKSA6IG51bGw7XG4gICAgfTtcbiAgICBjb25zdCBlbmRZZWFycyA9IHBhcnNlZFJlc3VtZS53b3JrLm1hcCh3ID0+IHBhcnNlWWVhcih3LnRvIHx8ICcnKSB8fCBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkpLmZpbHRlcigoeSk6IHkgaXMgbnVtYmVyID0+ICEheSk7XG4gICAgY29uc3Qgc3RhcnRZZWFycyA9IHBhcnNlZFJlc3VtZS53b3JrLm1hcCh3ID0+IHBhcnNlWWVhcih3LmZyb20gfHwgJycpIHx8IChlbmRZZWFyc1swXSB8fCBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkpKS5maWx0ZXIoKHkpOiB5IGlzIG51bWJlciA9PiAhIXkpO1xuICAgIGNvbnN0IHllYXJzRXhwID0gZW5kWWVhcnMubGVuZ3RoICYmIHN0YXJ0WWVhcnMubGVuZ3RoID8gTWF0aC5tYXgoLi4uZW5kWWVhcnMpIC0gTWF0aC5taW4oLi4uc3RhcnRZZWFycykgOiBudWxsO1xuICAgIGNvbnN0IGV4cGVyaWVuY2VTbmFwc2hvdCA9IFtcbiAgICAgIHllYXJzRXhwID8gYCR7eWVhcnNFeHB9KyB5ZWFycyBvZiBleHBlcmllbmNlYCA6ICcnLFxuICAgICAgY29tcGFuaWVzID8gYGFjcm9zcyAke2NvbXBhbmllc31gIDogJycsXG4gICAgICB0aXRsZXMgPyBgcm9sZXMgYXMgJHt0aXRsZXN9YCA6ICcnXG4gICAgXS5maWx0ZXIoQm9vbGVhbikuam9pbignLCAnKSArICcuJztcbiAgICBjb25zdCBzdW1tYXJ5UmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL3Jld3JpdGUtc3VtbWFyeWAsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG9yaWdpbmFsU3VtbWFyeTogcGFyc2VkUmVzdW1lLnN1bW1hcnksXG4gICAgICAgIG9wdGltaXplZEJ1bGxldHM6IHVwZGF0ZWQud29yay5mbGF0TWFwKCh3KSA9PiB3LmJ1bGxldHMpLFxuICAgICAgICBwcm9qZWN0czogdXBkYXRlZC5wcm9qZWN0cyB8fCBbXSxcbiAgICAgICAgc2tpbGxzOiB1cGRhdGVkLnNraWxscyxcbiAgICAgICAgdGFyZ2V0VGl0bGUsXG4gICAgICAgIHRhcmdldENvbXBhbnksXG4gICAgICAgIHJlcXVpcmVtZW50cyxcbiAgICAgICAga2V5d29yZHMsXG4gICAgICAgIGpvYkRlc2NyaXB0aW9uLFxuICAgICAgICBleHBlcmllbmNlU25hcHNob3QsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgICBpZiAoIXN1bW1hcnlSZXMub2spIHRocm93IG5ldyBFcnJvcigncmV3cml0ZS1zdW1tYXJ5IGZhaWxlZCcpO1xuICAgIGNvbnN0IHsgcmV3cml0dGVuU3VtbWFyeSB9ID0gKGF3YWl0IHN1bW1hcnlSZXMuanNvbigpKSBhcyBSZXdyaXRlU3VtbWFyeVJlc3BvbnNlO1xuICAgIHVwZGF0ZWQuc3VtbWFyeSA9IHJld3JpdHRlblN1bW1hcnk7XG5cbiAgICAvLyA2LiBSZXdyaXRlIHNraWxsc1xuICAgIC8vIDYuIFJld3JpdGUgc2tpbGxzIHZpYSBQYWdlcyBBUElcbiAgICBjb25zdCBza2lsbHNSZXMgPSBhd2FpdCBmZXRjaChgJHtiYXNlVXJsfS9hcGkvcmV3cml0ZS1za2lsbHNgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBvcmlnaW5hbFNraWxsczogdXBkYXRlZC5za2lsbHMsXG4gICAgICAgIG9wdGltaXplZFN1bW1hcnk6IHVwZGF0ZWQuc3VtbWFyeSxcbiAgICAgICAgb3B0aW1pemVkQnVsbGV0czogdXBkYXRlZC53b3JrLmZsYXRNYXAoKHcpID0+IHcuYnVsbGV0cyksXG4gICAgICAgIGtleXdvcmRzLFxuICAgICAgICB0YXJnZXRUaXRsZSxcbiAgICAgICAgdGFyZ2V0Q29tcGFueSxcbiAgICAgICAgcmVxdWlyZW1lbnRzLFxuICAgICAgICBqb2JEZXNjcmlwdGlvbixcbiAgICAgIH0pLFxuICAgIH0pO1xuICAgIGlmICghc2tpbGxzUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ3Jld3JpdGUtc2tpbGxzIGZhaWxlZCcpO1xuICAgIGNvbnN0IHsgcmV3cml0dGVuU2tpbGxzIH0gPSAoYXdhaXQgc2tpbGxzUmVzLmpzb24oKSkgYXMgUmV3cml0ZVNraWxsc1Jlc3BvbnNlO1xuICAgIHVwZGF0ZWQuc2tpbGxzID0gcmV3cml0dGVuU2tpbGxzO1xuXG4gICAgLy8gNy4gUmV3cml0ZSBwcm9qZWN0cyB2aWEgUGFnZXMgQVBJIChpZiBwcmVzZW50KVxuICAgIGlmIChwYXJzZWRSZXN1bWUucHJvamVjdHMgJiYgcGFyc2VkUmVzdW1lLnByb2plY3RzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IHByb2pSZXMgPSBhd2FpdCBmZXRjaChgJHtiYXNlVXJsfS9hcGkvcmV3cml0ZS1wcm9qZWN0c2AsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgcHJvamVjdHM6IHBhcnNlZFJlc3VtZS5wcm9qZWN0cyxcbiAgICAgICAgICBrZXl3b3JkcyxcbiAgICAgICAgICByZXF1aXJlbWVudHMsXG4gICAgICAgICAgdGFyZ2V0VGl0bGUsXG4gICAgICAgICAgdGFyZ2V0Q29tcGFueSxcbiAgICAgICAgICBqb2JEZXNjcmlwdGlvbixcbiAgICAgICAgICBza2lsbHM6IHVwZGF0ZWQuc2tpbGxzLFxuICAgICAgICAgIHN1bW1hcnk6IHVwZGF0ZWQuc3VtbWFyeVxuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgICBpZiAoIXByb2pSZXMub2spIHRocm93IG5ldyBFcnJvcigncmV3cml0ZS1wcm9qZWN0cyBmYWlsZWQnKTtcbiAgICAgIGNvbnN0IHsgcmV3cml0dGVuUHJvamVjdHMgfSA9IChhd2FpdCBwcm9qUmVzLmpzb24oKSkgYXMgeyByZXdyaXR0ZW5Qcm9qZWN0czogYW55W10gfTtcbiAgICAgIHVwZGF0ZWQucHJvamVjdHMgPSByZXdyaXR0ZW5Qcm9qZWN0cztcbiAgICB9XG4gICAgLy8gRW5zdXJlIGNlcnRpZmljYXRpb25zICYgYXdhcmRzIGZsb3cgdGhyb3VnaCB0byBvcHRpbWl6ZWQgcmVzdW1lXG4gICAgdXBkYXRlZC5jZXJ0aWZpY2F0aW9ucyA9IHBhcnNlZFJlc3VtZS5jZXJ0aWZpY2F0aW9ucyB8fCBbXTtcbiAgICB1cGRhdGVkLmF3YXJkcyA9IHBhcnNlZFJlc3VtZS5hd2FyZHMgfHwgW107XG4gICAgLy8gOC4gUGVyc2lzdCBvcHRpbWl6YXRpb24gcnVuXG4gICAgY29uc3QgcnVuRGF0YTogT3B0aW1pemF0aW9uUnVuRGF0YSA9IHtcbiAgICAgIHVzZXJJZCxcbiAgICAgIHJlc3VtZUZpbGVJZDogcmVzdW1lRmlsZS5pZCxcbiAgICAgIGpvYkRlc2NyaXB0aW9uLFxuICAgICAgdGVtcGxhdGVJZDogU3RyaW5nKHRlbXBsYXRlSWQpLFxuICAgICAgb3JpZ2luYWxUZXh0OiBKU09OLnN0cmluZ2lmeShvcmlnaW5hbFBhcnNlZFJlc3VtZSksXG4gICAgICBvcHRpbWl6ZWRUZXh0OiBKU09OLnN0cmluZ2lmeSh1cGRhdGVkKSxcbiAgICAgIGJ1bGxldFJld3JpdGVzOiByZXdyaXRlUmVzdWx0cyxcbiAgICAgIHN1bW1hcnlSZXdyaXRlOiB1cGRhdGVkLnN1bW1hcnksXG4gICAgICBza2lsbHNSZXdyaXRlOiBKU09OLnN0cmluZ2lmeSh1cGRhdGVkLnNraWxscyksXG4gICAgICBrZXl3b3JkcyxcbiAgICAgIHJlcXVpcmVtZW50cyxcbiAgICAgIHRhcmdldFRpdGxlLFxuICAgICAgdGFyZ2V0Q29tcGFueSxcbiAgICAgIGFpTW9kZWw6ICdvMy1taW5pLTIwMjUtMDEtMzEnLFxuICAgICAgdG9rZW5Db3VudDogMCxcbiAgICAgIGNvc3RVc2Q6IDAsXG4gICAgfTtcbiAgICBjb25zdCBydW4gPSBhd2FpdCBwcmlzbWEub3B0aW1pemF0aW9uUnVuLmNyZWF0ZSh7IGRhdGE6IHJ1bkRhdGEgYXMgYW55IH0pO1xuXG4gICAgLy8gUmV0dXJuIGZ1bGwgcmVzdWx0LCBlbnN1cmluZyBjZXJ0aWZpY2F0aW9ucyAmIGF3YXJkcyBhcmUgaW5jbHVkZWRcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgcnVuSWQ6IHJ1bi5pZCxcbiAgICAgIG9yaWdpbmFsUmVzdW1lOiBvcmlnaW5hbFBhcnNlZFJlc3VtZSxcbiAgICAgIG9wdGltaXplZFJlc3VtZToge1xuICAgICAgICAuLi51cGRhdGVkLFxuICAgICAgICBjZXJ0aWZpY2F0aW9uczogcGFyc2VkUmVzdW1lLmNlcnRpZmljYXRpb25zIHx8IFtdLFxuICAgICAgICBhd2FyZHM6IHBhcnNlZFJlc3VtZS5hd2FyZHMgfHwgW10sXG4gICAgICB9LFxuICAgICAga2V5d29yZHMsXG4gICAgICByZXF1aXJlbWVudHMsXG4gICAgICB0YXJnZXRUaXRsZSxcbiAgICAgIHRhcmdldENvbXBhbnksXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBvcHRpbWl6ZS1yZXN1bWU6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdJbnRlcm5hbCBlcnJvcicgfSwgeyBzdGF0dXM6IDUwMCB9KTtcbiAgfVxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJhdXRoIiwiY2xlcmtDbGllbnQiLCJwcmlzbWEiLCJjcmVhdGVIYXNoIiwicnVudGltZSIsIlBPU1QiLCJyZXEiLCJyZXN1bWVUZXh0IiwicmVzdW1lRGF0YSIsImpvYkRlc2NyaXB0aW9uIiwidGVtcGxhdGVJZCIsImZpbGVOYW1lIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwic2Vzc2lvbiIsInVzZXJJZCIsImNsZXJrVXNlciIsInVzZXJzIiwiZ2V0VXNlciIsImVtYWlsIiwiZW1haWxBZGRyZXNzZXMiLCJlbWFpbEFkZHJlc3MiLCJmdWxsTmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwidHJpbSIsInVzZXIiLCJ1cHNlcnQiLCJ3aGVyZSIsImlkIiwiY3JlYXRlIiwidXBkYXRlIiwicHJvdG9jb2wiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJob3N0IiwiaGVhZGVycyIsImdldCIsImJhc2VVcmwiLCJyYXdUZXh0Iiwibm9ybWFsaXplZFRleHQiLCJyZXBsYWNlIiwib3JpZ2luYWxUZXh0SGFzaCIsImRpZ2VzdCIsInJlc3VtZUZpbGUiLCJkYXRhIiwiZmlsZVBhdGgiLCJwYXJzZWRSZXN1bWUiLCJzYXZlZCIsInNhdmVkUmVzdW1lIiwiZmluZEZpcnN0IiwidGV4dEhhc2giLCJwYXJzZWREYXRhIiwicGFyc2VSZXMiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzdW1lIiwib2siLCJFcnJvciIsImpkUmVzIiwidGFyZ2V0VGl0bGUiLCJ0YXJnZXRDb21wYW55IiwicmVxdWlyZW1lbnRzIiwiZWtSZXMiLCJrZXl3b3JkcyIsIm9yaWdpbmFsUGFyc2VkUmVzdW1lIiwicGFyc2UiLCJ1cGRhdGVkIiwiY2VydGlmaWNhdGlvbnMiLCJhd2FyZHMiLCJtYXBSZXMiLCJhc3NpZ25tZW50cyIsInJld3JpdGVSZXN1bHRzIiwidXNlZFZlcmJzIiwidGFza3MiLCJ3b3JrIiwiZm9yRWFjaCIsIndvcmtJdGVtIiwid2kiLCJidWxsZXRzIiwiYnVsbGV0IiwiYmkiLCJhc3NpZ25tZW50IiwiZmluZCIsImEiLCJ3b3JrSW5kZXgiLCJidWxsZXRJbmRleCIsInB1c2giLCJhc3NpZ25lZEtleXdvcmRzIiwiY29uY3VycmVuY3kiLCJpIiwibGVuZ3RoIiwiYmF0Y2giLCJzbGljZSIsInJlc3VsdHMiLCJQcm9taXNlIiwiYWxsIiwibWFwIiwiYnVsbGV0UmVzIiwiam9iVGl0bGUiLCJ0aXRsZSIsImNvbXBhbnkiLCJza2lsbHMiLCJyZXdyaXR0ZW5CdWxsZXQiLCJrZXl3b3Jkc1VzZWQiLCJmaXJzdFdvcmQiLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwicHJvamVjdHMiLCJwcm9qUmVzIiwic3VtbWFyeSIsInJld3JpdHRlblByb2plY3RzIiwiY29tcGFuaWVzIiwiQXJyYXkiLCJmcm9tIiwiU2V0IiwidyIsImpvaW4iLCJ0aXRsZXMiLCJwYXJzZVllYXIiLCJzIiwibSIsIm1hdGNoIiwicGFyc2VJbnQiLCJlbmRZZWFycyIsInRvIiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwiZmlsdGVyIiwieSIsInN0YXJ0WWVhcnMiLCJ5ZWFyc0V4cCIsIk1hdGgiLCJtYXgiLCJtaW4iLCJleHBlcmllbmNlU25hcHNob3QiLCJCb29sZWFuIiwic3VtbWFyeVJlcyIsIm9yaWdpbmFsU3VtbWFyeSIsIm9wdGltaXplZEJ1bGxldHMiLCJmbGF0TWFwIiwicmV3cml0dGVuU3VtbWFyeSIsInNraWxsc1JlcyIsIm9yaWdpbmFsU2tpbGxzIiwib3B0aW1pemVkU3VtbWFyeSIsInJld3JpdHRlblNraWxscyIsInJ1bkRhdGEiLCJyZXN1bWVGaWxlSWQiLCJTdHJpbmciLCJvcmlnaW5hbFRleHQiLCJvcHRpbWl6ZWRUZXh0IiwiYnVsbGV0UmV3cml0ZXMiLCJzdW1tYXJ5UmV3cml0ZSIsInNraWxsc1Jld3JpdGUiLCJhaU1vZGVsIiwidG9rZW5Db3VudCIsImNvc3RVc2QiLCJydW4iLCJvcHRpbWl6YXRpb25SdW4iLCJydW5JZCIsIm9yaWdpbmFsUmVzdW1lIiwib3B0aW1pemVkUmVzdW1lIiwiY29uc29sZSIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/optimize-resume/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) {\n    global.prisma = prisma;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFNdkMsTUFBTUMsU0FBU0MsT0FBT0QsTUFBTSxJQUFJLElBQUlELHdEQUFZQSxHQUFHO0FBRTFELElBQUlHLElBQXFDLEVBQUU7SUFDekNELE9BQU9ELE1BQU0sR0FBR0E7QUFDbEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2xpbmhheWVzL3JlemlhLWFpLXJlc3VtZS1jcmFmdC9zcmMvbGliL3ByaXNtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsLnByaXNtYSB8fCBuZXcgUHJpc21hQ2xpZW50KCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGdsb2JhbC5wcmlzbWEgPSBwcmlzbWE7XG59XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2xvYmFsIiwicHJvY2VzcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../../server/app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@clerk","vendor-chunks/@opentelemetry","vendor-chunks/tslib","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/no-case","vendor-chunks/map-obj","vendor-chunks/lower-case","vendor-chunks/dot-case","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();