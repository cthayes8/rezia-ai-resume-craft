/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/optimize-resume/route";
exports.ids = ["app/api/optimize-resume/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_colinhayes_rezia_ai_resume_craft_src_app_api_optimize_resume_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/optimize-resume/route.ts */ \"(rsc)/./src/app/api/optimize-resume/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/optimize-resume/route\",\n        pathname: \"/api/optimize-resume\",\n        filename: \"route\",\n        bundlePath: \"app/api/optimize-resume/route\"\n    },\n    resolvedPagePath: \"/Users/colinhayes/rezia-ai-resume-craft/src/app/api/optimize-resume/route.ts\",\n    nextConfigOutput,\n    userland: _Users_colinhayes_rezia_ai_resume_craft_src_app_api_optimize_resume_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZvcHRpbWl6ZS1yZXN1bWUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm9wdGltaXplLXJlc3VtZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm9wdGltaXplLXJlc3VtZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmNvbGluaGF5ZXMlMkZyZXppYS1haS1yZXN1bWUtY3JhZnQlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGY29saW5oYXllcyUyRnJlemlhLWFpLXJlc3VtZS1jcmFmdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDNEI7QUFDekc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9jb2xpbmhheWVzL3JlemlhLWFpLXJlc3VtZS1jcmFmdC9zcmMvYXBwL2FwaS9vcHRpbWl6ZS1yZXN1bWUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL29wdGltaXplLXJlc3VtZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL29wdGltaXplLXJlc3VtZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvb3B0aW1pemUtcmVzdW1lL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2NvbGluaGF5ZXMvcmV6aWEtYWktcmVzdW1lLWNyYWZ0L3NyYy9hcHAvYXBpL29wdGltaXplLXJlc3VtZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/optimize-resume/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/optimize-resume/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n// heavy parsing steps moved to Pages API for faster warm lambdas\n// Removed direct import of internal API handlers; using HTTP fetch to Pages API instead\nconst runtime = 'nodejs';\n/**\n * API Route: Full orchestration of resume optimization as a single Node.js function\n */ async function POST(req) {\n    try {\n        const { resumeText, resumeData, jobDescription, templateId, fileName } = await req.json();\n        if (!jobDescription || !resumeText && !resumeData) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing resumeData or resumeText, and jobDescription'\n            }, {\n                status: 400\n            });\n        }\n        // Authenticate user\n        const session = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.auth)();\n        const userId = session.userId;\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        // Ensure user record\n        const clerkUser = await (await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__.clerkClient)()).users.getUser(userId);\n        const email = clerkUser.emailAddresses[0]?.emailAddress || '';\n        const fullName = `${clerkUser.firstName || ''} ${clerkUser.lastName || ''}`.trim();\n        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.upsert({\n            where: {\n                id: userId\n            },\n            create: {\n                id: userId,\n                email,\n                fullName\n            },\n            update: {\n                email,\n                fullName\n            }\n        });\n        // Prepare baseUrl for API calls\n        const protocol =  true ? 'http' : 0;\n        const host = req.headers.get('host');\n        const baseUrl = `${protocol}://${host}`;\n        // Always save resume file metadata so we have a file record\n        const rawText = resumeText ?? '';\n        const normalizedText = rawText.replace(/\\s+/g, ' ').trim();\n        const originalTextHash = (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)('sha256').update(normalizedText).digest('hex');\n        const resumeFile = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.resumeFile.create({\n            data: {\n                userId,\n                fileName: fileName || '',\n                filePath: '',\n                originalTextHash\n            }\n        });\n        // Determine parsed resume: prefer provided resumeData, else cached or LLM parse\n        let parsedResume;\n        if (resumeData) {\n            parsedResume = resumeData;\n        } else {\n            // Try to load cached parsedData\n            const saved = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.savedResume.findFirst({\n                where: {\n                    userId,\n                    textHash: originalTextHash\n                }\n            });\n            if (saved?.parsedData) {\n                parsedResume = saved.parsedData;\n            } else {\n                const parseRes = await fetch(`${baseUrl}/api/parse-resume`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        resume: resumeText,\n                        jobDescription\n                    })\n                });\n                if (!parseRes.ok) throw new Error('parse-resume failed');\n                parsedResume = (await parseRes.json()).parsedResume;\n            }\n        }\n        // 1. Extract JD info via Pages API (baseUrl defined earlier)\n        const jdRes = await fetch(`${baseUrl}/api/extract-jd-info`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                jobDescription\n            })\n        });\n        if (!jdRes.ok) throw new Error('extract-jd-info failed');\n        const { keywords, targetTitle, targetCompany, requirements } = await jdRes.json();\n        // Deep-clone to preserve the original parsed resume before mutation\n        const originalParsedResume = JSON.parse(JSON.stringify(parsedResume));\n        // Work on a separate copy for updates\n        const updated = JSON.parse(JSON.stringify(parsedResume));\n        // Ensure certifications and awards from parsed resume persist into optimized version\n        updated.certifications = parsedResume.certifications || [];\n        updated.awards = parsedResume.awards || [];\n        // 3. Map keywords via Pages API\n        const mapRes = await fetch(`${baseUrl}/api/map-keywords`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                resumeData: updated,\n                keywords\n            })\n        });\n        if (!mapRes.ok) throw new Error('map-keywords failed');\n        const { assignments } = await mapRes.json();\n        // 4. Rewrite bullets in parallel with limited concurrency, avoiding duplicate start verbs\n        const rewriteResults = [];\n        // Track used leading verbs to avoid repetition\n        const usedVerbs = [];\n        // Prepare tasks for each bullet\n        const tasks = [];\n        updated.work.forEach((workItem, wi)=>{\n            workItem.bullets.forEach((bullet, bi)=>{\n                const assignment = assignments.find((a)=>a.workIndex === wi && a.bulletIndex === bi);\n                tasks.push({\n                    wi,\n                    bi,\n                    bullet,\n                    assignedKeywords: assignment?.assignedKeywords || []\n                });\n            });\n        });\n        const concurrency = 3;\n        for(let i = 0; i < tasks.length; i += concurrency){\n            const batch = tasks.slice(i, i + concurrency);\n            // Send rewrite requests, passing already used verbs\n            const results = await Promise.all(batch.map(async ({ wi, bi, bullet, assignedKeywords })=>{\n                const bulletRes = await fetch(`${baseUrl}/api/rewrite-bullet`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        bullet,\n                        keywords: assignedKeywords,\n                        jobTitle: updated.work[wi].title,\n                        company: updated.work[wi].company,\n                        jobDescription,\n                        skills: updated.skills,\n                        targetTitle,\n                        targetCompany,\n                        requirements,\n                        usedVerbs\n                    })\n                });\n                if (!bulletRes.ok) throw new Error('rewrite-bullet failed');\n                const { rewrittenBullet, keywordsUsed } = await bulletRes.json();\n                return {\n                    wi,\n                    bi,\n                    rewrittenBullet,\n                    keywordsUsed\n                };\n            }));\n            // Apply results and capture leading verbs\n            results.forEach(({ wi, bi, rewrittenBullet, keywordsUsed })=>{\n                updated.work[wi].bullets[bi] = rewrittenBullet;\n                rewriteResults.push({\n                    workIndex: wi,\n                    bulletIndex: bi,\n                    rewrittenBullet,\n                    keywordsUsed\n                });\n                // Extract first word as verb and track it\n                const firstWord = rewrittenBullet.trim().split(/\\s+/)[0].replace(/[^A-Za-z]/g, '');\n                if (firstWord) usedVerbs.push(firstWord.toLowerCase());\n            });\n        }\n        // 5. Rewrite summary\n        // 5. Rewrite summary via Pages API\n        // Build an experience snapshot for prompt context\n        const companies = Array.from(new Set(parsedResume.work.map((w)=>w.company))).join(', ');\n        const titles = Array.from(new Set(parsedResume.work.map((w)=>w.title))).join(', ');\n        const parseYear = (s)=>{\n            const m = s.match(/\\d{4}/);\n            return m ? parseInt(m[0], 10) : null;\n        };\n        const endYears = parsedResume.work.map((w)=>parseYear(w.to || '') || new Date().getFullYear()).filter((y)=>!!y);\n        const startYears = parsedResume.work.map((w)=>parseYear(w.from || '') || endYears[0] || new Date().getFullYear()).filter((y)=>!!y);\n        const yearsExp = endYears.length && startYears.length ? Math.max(...endYears) - Math.min(...startYears) : null;\n        const experienceSnapshot = [\n            yearsExp ? `${yearsExp}+ years of experience` : '',\n            companies ? `across ${companies}` : '',\n            titles ? `roles as ${titles}` : ''\n        ].filter(Boolean).join(', ') + '.';\n        const summaryRes = await fetch(`${baseUrl}/api/rewrite-summary`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                originalSummary: parsedResume.summary,\n                optimizedBullets: updated.work.flatMap((w)=>w.bullets),\n                skills: updated.skills,\n                targetTitle,\n                targetCompany,\n                requirements,\n                keywords,\n                jobDescription,\n                experienceSnapshot\n            })\n        });\n        if (!summaryRes.ok) throw new Error('rewrite-summary failed');\n        const { rewrittenSummary } = await summaryRes.json();\n        updated.summary = rewrittenSummary;\n        // 6. Rewrite skills\n        // 6. Rewrite skills via Pages API\n        const skillsRes = await fetch(`${baseUrl}/api/rewrite-skills`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                originalSkills: updated.skills,\n                optimizedSummary: updated.summary,\n                optimizedBullets: updated.work.flatMap((w)=>w.bullets),\n                keywords,\n                targetTitle,\n                targetCompany,\n                requirements,\n                jobDescription\n            })\n        });\n        if (!skillsRes.ok) throw new Error('rewrite-skills failed');\n        const { rewrittenSkills } = await skillsRes.json();\n        updated.skills = rewrittenSkills;\n        // 7. Rewrite projects via Pages API (if present)\n        if (parsedResume.projects && parsedResume.projects.length > 0) {\n            const projRes = await fetch(`${baseUrl}/api/rewrite-projects`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    projects: parsedResume.projects,\n                    keywords,\n                    requirements,\n                    targetTitle,\n                    targetCompany,\n                    jobDescription,\n                    skills: updated.skills,\n                    summary: updated.summary\n                })\n            });\n            if (!projRes.ok) throw new Error('rewrite-projects failed');\n            const { rewrittenProjects } = await projRes.json();\n            updated.projects = rewrittenProjects;\n        }\n        // Ensure certifications & awards flow through to optimized resume\n        updated.certifications = parsedResume.certifications || [];\n        updated.awards = parsedResume.awards || [];\n        // 8. Persist optimization run\n        const runData = {\n            userId,\n            resumeFileId: resumeFile.id,\n            jobDescription,\n            templateId: String(templateId),\n            originalText: JSON.stringify(originalParsedResume),\n            optimizedText: JSON.stringify(updated),\n            bulletRewrites: rewriteResults,\n            summaryRewrite: updated.summary,\n            skillsRewrite: JSON.stringify(updated.skills),\n            keywords,\n            requirements,\n            targetTitle,\n            targetCompany,\n            aiModel: 'o3-mini-2025-01-31',\n            tokenCount: 0,\n            costUsd: 0\n        };\n        const run = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.optimizationRun.create({\n            data: runData\n        });\n        // Return full result, ensuring certifications & awards are included\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            runId: run.id,\n            originalResume: originalParsedResume,\n            optimizedResume: {\n                ...updated,\n                certifications: parsedResume.certifications || [],\n                awards: parsedResume.awards || []\n            },\n            keywords,\n            requirements,\n            targetTitle,\n            targetCompany\n        });\n    } catch (error) {\n        console.error('Error in optimize-resume:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || 'Internal error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/optimize-resume/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) {\n    global.prisma = prisma;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFNdkMsTUFBTUMsU0FBU0MsT0FBT0QsTUFBTSxJQUFJLElBQUlELHdEQUFZQSxHQUFHO0FBRTFELElBQUlHLElBQXFDLEVBQUU7SUFDekNELE9BQU9ELE1BQU0sR0FBR0E7QUFDbEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2xpbmhheWVzL3JlemlhLWFpLXJlc3VtZS1jcmFmdC9zcmMvbGliL3ByaXNtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsLnByaXNtYSB8fCBuZXcgUHJpc21hQ2xpZW50KCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGdsb2JhbC5wcmlzbWEgPSBwcmlzbWE7XG59XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2xvYmFsIiwicHJvY2VzcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../../server/app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@clerk","vendor-chunks/@opentelemetry","vendor-chunks/tslib","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/no-case","vendor-chunks/map-obj","vendor-chunks/lower-case","vendor-chunks/dot-case","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize-resume%2Froute&page=%2Fapi%2Foptimize-resume%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize-resume%2Froute.ts&appDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcolinhayes%2Frezia-ai-resume-craft&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();