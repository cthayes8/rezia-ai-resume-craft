
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CoverLetterScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  optimizationRunId: 'optimizationRunId',
  letterText: 'letterText',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  fullName: 'fullName',
  firstName: 'firstName',
  lastName: 'lastName',
  createdAt: 'createdAt',
  deletedAt: 'deletedAt',
  freeRunsRemaining: 'freeRunsRemaining',
  plan: 'plan'
};

exports.Prisma.ResumeFileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fileName: 'fileName',
  filePath: 'filePath',
  uploadedAt: 'uploadedAt',
  originalTextHash: 'originalTextHash'
};

exports.Prisma.OptimizationRunScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  resumeFileId: 'resumeFileId',
  jobDescription: 'jobDescription',
  templateId: 'templateId',
  originalText: 'originalText',
  optimizedText: 'optimizedText',
  bulletRewrites: 'bulletRewrites',
  summaryRewrite: 'summaryRewrite',
  skillsRewrite: 'skillsRewrite',
  keywords: 'keywords',
  requirements: 'requirements',
  targetTitle: 'targetTitle',
  targetCompany: 'targetCompany',
  aiModel: 'aiModel',
  tokenCount: 'tokenCount',
  costUsd: 'costUsd',
  createdAt: 'createdAt',
  deletedAt: 'deletedAt',
  optimizedAtsNotes: 'optimizedAtsNotes',
  optimizedAtsScore: 'optimizedAtsScore',
  originalAtsNotes: 'originalAtsNotes',
  originalAtsScore: 'originalAtsScore'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  optimizationRunId: 'optimizationRunId',
  userId: 'userId',
  rating: 'rating',
  comments: 'comments',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planName: 'planName',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId'
};

exports.Prisma.UsageRecordScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  optimizationRunId: 'optimizationRunId',
  tokenCount: 'tokenCount',
  costUsd: 'costUsd',
  createdAt: 'createdAt'
};

exports.Prisma.UsageEventScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventType: 'eventType',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.ScorecardScalarFieldEnum = {
  id: 'id',
  optimizationRunId: 'optimizationRunId',
  overallScore: 'overallScore',
  metrics: 'metrics',
  takeaways: 'takeaways',
  redFlags: 'redFlags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SavedResumeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  content: 'content',
  createdAt: 'createdAt',
  parsedData: 'parsedData',
  textHash: 'textHash'
};

exports.Prisma.UnifiedResumeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  version: 'version',
  builderData: 'builderData',
  optimizationData: 'optimizationData',
  sharingData: 'sharingData',
  title: 'title',
  template: 'template',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  analyzedAt: 'analyzedAt',
  publishedAt: 'publishedAt'
};

exports.Prisma.ResumeAnalysisScalarFieldEnum = {
  id: 'id',
  resumeId: 'resumeId',
  jobDescription: 'jobDescription',
  overallScore: 'overallScore',
  keywordMatches: 'keywordMatches',
  similarityScore: 'similarityScore',
  atsCompatibility: 'atsCompatibility',
  sectionScores: 'sectionScores',
  recommendations: 'recommendations',
  insights: 'insights',
  analysisVersion: 'analysisVersion',
  modelUsed: 'modelUsed',
  processingTime: 'processingTime',
  createdAt: 'createdAt'
};

exports.Prisma.ResumeShareScalarFieldEnum = {
  id: 'id',
  resumeId: 'resumeId',
  shareToken: 'shareToken',
  isPublic: 'isPublic',
  password: 'password',
  expiresAt: 'expiresAt',
  viewCount: 'viewCount',
  lastViewed: 'lastViewed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShareViewScalarFieldEnum = {
  id: 'id',
  shareId: 'shareId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  referer: 'referer',
  country: 'country',
  viewedAt: 'viewedAt'
};

exports.Prisma.ResumeTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category: 'category',
  structure: 'structure',
  sections: 'sections',
  isActive: 'isActive',
  isPremium: 'isPremium',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TemplateUsageScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  userId: 'userId',
  usedAt: 'usedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  CoverLetter: 'CoverLetter',
  User: 'User',
  ResumeFile: 'ResumeFile',
  OptimizationRun: 'OptimizationRun',
  Feedback: 'Feedback',
  Subscription: 'Subscription',
  UsageRecord: 'UsageRecord',
  UsageEvent: 'UsageEvent',
  Scorecard: 'Scorecard',
  SavedResume: 'SavedResume',
  UnifiedResume: 'UnifiedResume',
  ResumeAnalysis: 'ResumeAnalysis',
  ResumeShare: 'ResumeShare',
  ShareView: 'ShareView',
  ResumeTemplate: 'ResumeTemplate',
  TemplateUsage: 'TemplateUsage'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
